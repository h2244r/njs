"use strict";deinco=()=>new Promise((a,b)=>{var c="Unknown";__callback=b=>{a({isPrivate:b,browserName:c})},identifyChromium=()=>{var a=navigator.userAgent;return a.match(/Chrome/)?void 0===navigator.brave?a.match(/Edg/)?"Edge":a.match(/OPR/)?"Opera":"Chrome":"Brave":"Chromium"},assertEvalToString=a=>a===eval.toString().length,isSafari=()=>{var a=navigator.vendor;return void 0!==a&&0===a.indexOf("Apple")&&assertEvalToString(37)},isChrome=()=>{var a=navigator.vendor;return void 0!==a&&0===a.indexOf("Google")&&assertEvalToString(33)},isFirefox=()=>void 0!==document.documentElement&&void 0!==document.documentElement.style.MozAppearance&&assertEvalToString(37),isMSIE=()=>void 0!==navigator.msSaveBlob&&assertEvalToString(39),newSafariTest=()=>{var a=Math.random()+"";try{var b=window.indexedDB.open(a,1);b.onupgradeneeded=b=>{var c,d,e=null===(c=b.target)||void 0===c?void 0:c.result;try{e.createObjectStore("test",{autoIncrement:!0}).put(new Blob),__callback(!1)}catch(a){var f=a;if(a instanceof Error&&(f=null!==(d=a.message)&&void 0!==d?d:a),"string"!=typeof f)return __callback(!1);var g=/BlobURLs are not yet supported/.test(f);return __callback(g)}finally{e.close(),window.indexedDB.deleteDatabase(a)}}}catch(a){return __callback(!1)}},oldSafariTest=()=>{var a=window.openDatabase,b=window.localStorage;try{a(null,null,null,null)}catch(a){return __callback(!0)}try{b.setItem("test","1"),b.removeItem("test")}catch(a){return __callback(!0)}return __callback(!1)},safariPrivateTest=()=>{void 0===navigator.maxTouchPoints?oldSafariTest():newSafariTest()},getQuotaLimit=()=>{var a=window;return void 0!==a.performance&&void 0!==a.performance.memory&&void 0!==a.performance.memory.jsHeapSizeLimit?performance.memory.jsHeapSizeLimit:1073741824},storageQuotaChromePrivateTest=()=>{navigator.webkitTemporaryStorage.queryUsageAndQuota((a,b)=>{__callback(b<getQuotaLimit())},a=>{b(new Error("detectIncognito somehow failed to query storage quota: "+a.message))})},oldChromePrivateTest=()=>{var a=window.webkitRequestFileSystem;a(0,1,()=>{__callback(!1)},()=>{__callback(!0)})},chromePrivateTest=()=>{void 0!==self.Promise&&void 0!==self.Promise.allSettled?storageQuotaChromePrivateTest():oldChromePrivateTest()},firefoxPrivateTest=()=>{__callback(void 0===navigator.serviceWorker)},msiePrivateTest=()=>{__callback(void 0===window.indexedDB)},(()=>{isSafari()?(c="Safari",safariPrivateTest()):isChrome()?(c=identifyChromium(),chromePrivateTest()):isFirefox()?(c="Firefox",firefoxPrivateTest()):isMSIE()?(c="Internet Explorer",msiePrivateTest()):b(new Error("detectIncognito cannot determine the browser"))})()});
